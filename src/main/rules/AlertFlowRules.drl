#created on: Aug 3, 2011
package com.jboss.examples.drools.cep.alerts.rules

#list any import classes here.
import com.jboss.examples.drools.cep.alerts.model.Alert;
import com.jboss.examples.drools.cep.alerts.model.Attribute;
import com.jboss.examples.drools.cep.alerts.model.DerivedAlert;
import com.jboss.examples.drools.cep.alerts.model.Equipment;
import com.jboss.examples.drools.cep.alerts.model.Link;
import com.jboss.examples.drools.cep.alerts.model.SystemAlert;
import com.jboss.examples.drools.cep.alerts.model.AlertStatus;

import com.jboss.examples.drools.cep.alerts.services.CAPService;
import com.jboss.examples.drools.cep.alerts.services.DataService;

#declare any global variables here
global com.jboss.examples.drools.cep.alerts.services.CAPService capService;
global com.jboss.examples.drools.cep.alerts.services.DataService dataService;

rule "Create New Alert When SystemAlert Arrives"
    ruleflow-group "Alert Flow Rules"
    when
        $s : SystemAlert( status == AlertStatus.ACTIVE )
    then
        Alert a = new Alert( $s );
        Link downStreamLink = dataService.lookupDownstreamLink( a.getDeviceName() );
        Link upStreamLink = dataService.lookupUpstreamLink( a.getDeviceName() );
        a.setUpstreamLink( upStreamLink );
        a.setDownstreamLink( downStreamLink );
        System.out.println("new SystemAlert received.  Creating Alert for Alert " + a.getId());
        retract($s);
        insert(a);
end

rule "Check New Alert Against Existing Alerts"
    ruleflow-group "Check Against Existing"
    when
       $alert : Alert()
       $relatedAlert : Alert( deviceName == $alert.deviceName )
    then
        System.out.println("Previous Alert exists");
        #create Alert
        #create DerivedAlert
        DerivedAlert derivedAlert = new DerivedAlert();
        derivedAlert.addAlert($alert);
        derivedAlert.addAlert($relatedAlert);
        retract($alert);
        retract($relatedAlert);
        insert(derivedAlert);
end

